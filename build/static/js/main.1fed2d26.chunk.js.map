{"version":3,"sources":["Admin.js","App.js","serviceWorker.js","index.js"],"names":["bp_api","dev","contract","host","chainId","live","clientType","window","TPJSBrigeClient","navigator","userAgent","includes","match","geoXhr","XMLHttpRequest","accessContext","initAccessContext","appName","network","port","protocol","walletProviders","scatter","tokenpocket","lynxWalletProvider","getWalletProviders","rio","Admin","useState","error","loaded","setLoaded","froms","setFroms","originalFroms","setOriginalFroms","user","setUser","destinationFilter","setDestinationFilter","destinations","setDestinations","destination","setDestination","distance","setDistance","selectWalletProvider","idx","action","a","walletProvider","wallet","initWallet","connect","discover","pathIndexList","discoveryData","accountInfo","keyToAccountMap","length","keyObj","accountName","accounts","account","authorization","login","Error","adminUsername","auth","console","log","eosApi","transact","actions","name","actor","permission","data","broadcast","blocksBehind","expireSeconds","alert","useEffect","clearTimeout","setTimeout","onreadystatechange","readyState","status","json","JSON","parse","responseText","features","open","encodeURIComponent","send","coords","geometry","coordinates","lat1","lon1","lat2","lon2","unit","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","round","calcDistance","xhr","rows","className","style","paddingBottom","src","display","flex","onClick","type","onChange","e","filter","from","target","value","toLowerCase","placeholder","map","overflow","whiteSpace","textOverflow","properties","formatted","confirm","id","App","useSelector","state","dispatch","useDispatch","payload","username","renderWalletProviders","meta","key","renderLoginBox","introText","fontWeight","href","textAlign","paddingTop","padding","isAdmin","location","hash","flexDirection","flexGrow","maxHeight","borderBottomRightRadius","borderBottomLeftRadius","backgroundColor","letterSpacing","fontSize","textDecoration","minHeight","marginTop","paddingLeft","paddingRight","justifyContent","maxWidth","rel","method","novalidate","required","position","left","aria-hidden","tabindex","bottom","right","width","Boolean","hostname","reducers","combineReducers","document","getElementById","scrollIntoView","behavior","store","createStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.1fed2d26.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\n/* needs compression */\nimport { initAccessContext } from 'eos-transit';\nimport scatter from 'eos-transit-scatter-provider';\nimport tokenpocket from 'eos-transit-tokenpocket-provider';\nimport lynxWalletProvider from 'eos-transit-lynx-provider';\nconst bp_api = {\n    dev: {\n        contract: 'wigglewiggle',\n        host: 'jungle2.cryptolions.io',\n        chainId: 'e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473'\n    },\n    live: {\n        contract: 'travelrefund',\n        host: 'eos.greymass.com',\n        chainId: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906'\n    }\n}\nlet clientType = null\nif (window.TPJSBrigeClient) {\n     clientType = 'TokenPocket'\n}\nelse if (navigator.userAgent.includes(\"EOSLynx\")){\n     clientType = 'EOS Lynx'\n}\nelse if (!!navigator.userAgent.match(/Android|iPhone|iPad|iPod/i)){\n\tclientType = \"mobile_browser\" \n}\nelse {\n\tclientType = \"desktop_browser\" \n}\nconst env = 'live'\nvar geoXhr = new XMLHttpRequest();\n\nconst accessContext = initAccessContext({\n\tappName: 'trf-web',\n\tnetwork: {\n\t\thost: bp_api[env].host,\n\t\tport: 443,\n\t\tprotocol: 'https',\n\t\tchainId: bp_api[env].chainId,\n\t},\n\twalletProviders: [\n\t\tscatter(),\n        tokenpocket(),\n        lynxWalletProvider()\n\n\t]\n});\nconst walletProviders = accessContext.getWalletProviders();\n\n\n// the conference const rio = {lat: -22.9669101,lng: -43.1811887}\n// the city\nconst rio = {lat: -22.9110137,lng: -43.2093727}\n\n\nconst Admin = () => {\n\tlet geoTimer = null\n       const [error, setError] = useState(null);\n\t\tconst [loaded, setLoaded] = useState(false);\n\t\tconst [froms, setFroms] = useState([]);\n\t\tconst [originalFroms, setOriginalFroms] = useState([]);\n\t\tconst [user, setUser] = useState(null);\n\t\tconst [destinationFilter, setDestinationFilter] = useState(null);\n\t\tconst [destinations, setDestinations] = useState([]);\n\t\tconst [destination, setDestination] = useState(null);\n\t\tconst [distance, setDistance] = useState(null);\n\n\t\tconst selectWalletProvider =  async (idx, action) => {\n\t\t\ttry { \n\t\t\t\tconst walletProvider = walletProviders[idx];\n\t\t\t\tconst wallet = accessContext.initWallet(walletProvider);\n\t\t\t\tlet connect_response = await wallet.connect()\n\t\t\t\tconst discoveryData = await wallet.discover({ pathIndexList: [ 0,1,2,3 ] })\n\t\t\t\tlet accountInfo = null\n\t\t\t\tif (discoveryData.keyToAccountMap.length > 0) {\n\t\t\t\t\t// @todo(seth): should allow selection\n\t\t\t\t\tconst index = 0;\n\t\t\t\t\tconst keyObj = discoveryData.keyToAccountMap[index];\n\t\t\t\t\tconst accountName = keyObj.accounts[0].account;\n\t\t\t\t\tconst authorization = keyObj.accounts[0].authorization;\n\t\t\t\t\taccountInfo = wallet.login(accountName, authorization)\n\t\t\t\t} \n\t\t\t\telse { // discovery not supported (scatter for example)\n\t\t\t\t\taccountInfo = await wallet.login()\n\t\t\t\t}\n\t\t\t\t// logged in\n\t\t\t\tif (!accountInfo) throw Error(\"Not logged in\")\n\t\t\t\tlet adminUsername = wallet.auth.accountName\n\n\t\t\t\tconsole.log(wallet.eosApi);\n\t\t\t\tlet wallet_result = await wallet.eosApi.transact({\n\t\t\t\t\tactions: [{\n\t\t\t\t\t\t  account: bp_api[env].contract ,\n\t\t\t\t\t\t  name: action,\n\t\t\t\t\t\t  authorization: [{\n\t\t\t\t\t\t\t\t\t\tactor: adminUsername,\n\t\t\t\t\t\t\t\t\t\tpermission: \"active\",/*wallet.auth.permission,*/\n\t\t\t\t\t\t\t\t\t  }],\n\t\t\t\t\t\t  data: {user:user, distance: distance},\n\t\t\t\t\t}],\n\t\t\t\t}, {\n\t\t\t\t\t\tbroadcast: true,\n\t\t\t\t\tblocksBehind: 3, expireSeconds: 100});\n\t\t\t\twindow.alert('Done!')\n\t\t\t\t// @todo make this a clear function\n\t\t\t\t\tsetUser(null);\n\t\t\t\t\tsetDestination(null);\n\t\t\t\t\tsetDistance(null);\n\t\t\t\t\tsetDestinations([]);\n\t\t\t\t\tsetFroms([]);\n\n\t\t\t}\n\t\t\tcatch(err) {\n\t\t\t\talert(err)\n\n\t\t\t\tconsole.log('error', err)\n\t\t\t}\n\t\t};\n\t\tuseEffect(() => {\n\t\t\tclearTimeout(setTimeout);\n\t\t\tgeoTimer = setTimeout(() => {\n\t\t\t\tif(destinationFilter) {\n\t\t\t\t\tgeoXhr.onreadystatechange = function() {\n\t\t\t\t\t\tif (geoXhr.readyState == 4)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(geoXhr.status==200) {\n\t\t\t\t\t\t\t\tlet json = JSON.parse(geoXhr.responseText)\n\t\t\t\t\t\t\t\tconsole.log(json.features)\n\t\t\t\t\t\t\t\tsetDestinations(json.features);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tgeoXhr.open(\"GET\", \"https://api.opencagedata.com/geocode/v1/geojson?q=\"+encodeURIComponent(destinationFilter)+\"&key=457712e7eb8a4316a4580bcbb41828aa&language=en&pretty=1&no_annotations=1\");\n\t\t\t\t\tgeoXhr.send();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}, 300)\n\t}, [destinationFilter]);\n\n\tuseEffect(() => {\n\t\tif (destination) {\n\t\t\tlet coords = destination.geometry.coordinates;\n\t\t\tfunction calcDistance(lat1, lon1, lat2, lon2, unit) {\n\t\t\t\tif ((lat1 == lat2) && (lon1 == lon2)) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar radlat1 = Math.PI * lat1/180;\n\t\t\t\t\tvar radlat2 = Math.PI * lat2/180;\n\t\t\t\t\tvar theta = lon1-lon2;\n\t\t\t\t\tvar radtheta = Math.PI * theta/180;\n\t\t\t\t\tvar dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n\t\t\t\t\tif (dist > 1) {\n\t\t\t\t\t\tdist = 1;\n\t\t\t\t\t}\n\t\t\t\t\tdist = Math.acos(dist);\n\t\t\t\t\tdist = dist * 180/Math.PI;\n\t\t\t\t\tdist = dist * 60 * 1.1515;\n\t\t\t\t\tif (unit==\"K\") { dist = dist * 1.609344 }\n\t\t\t\t\tif (unit==\"N\") { dist = dist * 0.8684 }\n\t\t\t\t\treturn Math.round(dist);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetDistance(calcDistance(rio.lat, rio.lng, coords[1], coords[0]));\n\t\t}\n\t}, [destination]);\n\t\t\t\t\t\n\t\t\t\t\t\n\tuseEffect(() => { \n\t\tif (!loaded) {\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.onreadystatechange = function() {\n\t\t\t\tif (xhr.readyState == 4)\n\t\t\t\t{\n\t\t\t\t\tif(xhr.status==200) {\n\t\t\t\t\t\tlet json = JSON.parse(xhr.responseText)\n\t\t\t\t\t\tconsole.log(json);\n\t\t\t\t\t\tsetOriginalFroms(json.rows)\n\t\t\t\t\t\tsetLoaded(true)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr.open(\"POST\", \"http://eos.greymass.com/v1/chain/get_table_rows\");\n\t\t\txhr.send('{\"table\":\"requests\",\"scope\":\"travelrefund\",\"code\":\"travelrefund\",\"limit\":100,\"json\":true}');\n\t\t}\n\t}, [loaded])\n\t//curl --request POST --url http://eos.greymass.com/v1/chain/get_table_rows --data '{\"table\":\"requests\",\"scope\":\"travelrefund\",\"code\":\"travelrefund\",\"limit\":100,\"json\":true}'\n\n\n\tif (clientType == \"mobile_browser\" || clientType == \"desktop_browser\"){\n\t\treturn (<div>Use the TokenPocket app or EOS Lynx</div>)\n\t}\n\tconst onApprove = () => {\n\t\t// flip through all the different providers\n\t\tvar response = window.confirm(\"Approve this user?\");\n\t\tif (response) {\n\t\t\tfor (var idx = 0; idx < walletProviders.length; ++idx) {\n\t\t\t\tif (walletProviders[idx].id == clientType) {\n\t\t\t\t\tselectWalletProvider(idx, 'approve')\n\t\t\t\t\treturn \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} \n\tconst onReject = () => {\n\t\tvar response = window.confirm(\"Reject this user?\");\n\t\tif (response) {\n\t\t\t// flip through all the different providers\n\t\t\tfor (var idx = 0; idx < walletProviders.length; ++idx) {\n\t\t\t\tif (walletProviders[idx].id == clientType) {\n\t\t\t\t\tselectWalletProvider(idx, 'reject')\n\t\t\t\t\treturn \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} \n    return (\n        <>\n        <div>\n            <div className=\"hideOnDesktop\" style={{paddingBottom:40}}>\n                <img src=\"/img/rio_mobile.jpg\" />\n            </div>\n            <div>{error}</div>\n            <div style={{paddingBottom:40}}>\n\t\t\t\t{user ? <div style={{display:'flex'}}><div style={{flex:1}}>{user}</div> <div><button className=\"small-button\" onClick={()=>{\nsetUser(null);\nsetDestination(null);\nsetDistance(null);\n\t\t\t\t\tsetDestinations([]);\n\t\t\t\t\tsetFroms([]);\n}}>clear</button></div></div> :\n                <input type=\"text\" onChange={(e)=>{\n\t\t\t\t\tsetFroms(originalFroms.filter((from) => (from.user.includes(e.target.value.toLowerCase()))))\n\t\t\t\t}} placeholder=\"username\"/>\n\t\t\t\t}\n            <>{user ? null : froms.map((from, idx) => (<button className=\"small-button\" onClick={() => {setUser(from.user)  }}>{from.status} {from.user}</button>))}</>\n            </div>\n            <div>\n                {destination ? <div style={{overflow: 'hidden', whiteSpace: 'nowrap', textOverflow: 'ellipsis' }}> {destination.properties.formatted}</div>: <input onChange={(e)=>{\n\t\t\t\t\tsetDestinationFilter(e.target.value)\n\t\t\t\t}} type=\"text\" placeholder=\"from\"/> }\n            <>{destination ? null : destinations.map((from, idx) => (<button className=\"small-button\" onClick={() => {setDestination(from)  }}>{from.properties.formatted}</button>))}</>\n            </div>\n\t\t\t{distance ? <div>Distance: {distance} </div> : null }\n\t\t\t<>\n\t\t\t{distance && user ? (<>\n\t\t\t\t<button className=\"button\" onClick={onApprove}>Approve</button>\n\t\t\t\t<button className=\"button\" onClick={onReject}>Reject</button>\n\t\t\t</>): null }\n\t\t\t</>\n        </div>\n        </>\n    )\n};\nexport default Admin;\n","import React, {useState, useEffect} from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport './App.css';\nimport Admin from './Admin';\n\n/* accessContent + walletProviders*/\nimport { initAccessContext } from 'eos-transit';\nimport scatter from 'eos-transit-scatter-provider';\nimport tokenpocket from 'eos-transit-tokenpocket-provider';\nimport lynxWalletProvider from 'eos-transit-lynx-provider';\n\n\n\nconst bp_api = {\n    dev: {\n        contract: 'wigglewiggle',\n        host: 'jungle2.cryptolions.io',\n        chainId: 'e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473'\n    },\n    live: {\n        contract: 'travelrefund',\n        host: 'eos.greymass.com',\n        chainId: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906'\n    }\n}\nconst env = 'live'\n\n// see if browser is open\nlet clientType = null\nif (window.TPJSBrigeClient) {\n     clientType = 'TokenPocket'\n}\nelse if (navigator.userAgent.includes(\"EOSLynx\")){\n     clientType = 'EOS Lynx'\n}\nelse if (!!navigator.userAgent.match(/Android|iPhone|iPad|iPod/i)){\n\tclientType = \"mobile_browser\" \n}\nelse {\n\tclientType = \"desktop_browser\" \n}\n\n\nconst accessContext = initAccessContext({\n\tappName: 'trf-web',\n\tnetwork: {\n\t\thost: bp_api[env].host,\n\t\tport: 443,\n\t\tprotocol: 'https',\n\t\tchainId: bp_api[env].chainId,\n\t},\n\twalletProviders: [\n\t\tscatter(),\n        tokenpocket(),\n        lynxWalletProvider()\n\n\t]\n});\nconst walletProviders = accessContext.getWalletProviders();\nconsole.log('walletProviders', walletProviders);\n/* /accessContent + walletProviders*/\n\n\nconst App = () => {\n    const status = useSelector((state) =>state.status)\n    const dispatch = useDispatch()\n\tconst Status = () => {\n\t\tconst status = useSelector((state) =>state.status)\n\t\tconst dispatch = useDispatch()\n\t\treturn (<div style={{textAlign:'center', padding:20, }}>{status}</div>)\n\t}\n    const selectWalletProvider =  async (idx) => {\n        try { \n            const walletProvider = walletProviders[idx];\n            const wallet = accessContext.initWallet(walletProvider);\n            dispatch({type:'switch', payload: 'Wallet initialized...'})\n            let connect_response = await wallet.connect()\n            dispatch({type:'switch', payload: 'Connected...'})\n            const discoveryData = await wallet.discover({ pathIndexList: [ 0,1,2,3 ] })\n            let accountInfo = null\n            if (discoveryData.keyToAccountMap.length > 0) {\n                dispatch({type:'switch', payload:'Discovery complete...'})\n                // @todo(seth): should allow selection\n                const index = 0;\n                const keyObj = discoveryData.keyToAccountMap[index];\n                console.log('discovery, keyObj', keyObj)\n                const accountName = keyObj.accounts[0].account;\n                const authorization = keyObj.accounts[0].authorization;\n                accountInfo = wallet.login(accountName, authorization)\n            } \n            else { // discovery not supported (scatter for example)\n                dispatch({type:'switch', payload:'Logging in...'})\n                accountInfo = await wallet.login()\n            }\n            // logged in\n            if (!accountInfo) throw Error(\"Not logged in\")\n            let username = wallet.auth.accountName\n\n            console.log(wallet.eosApi);\n            dispatch({type:'switch', payload:'Submitting to blockchain...'})\n            let wallet_result = await wallet.eosApi.transact({\n                actions: [{\n                      account: bp_api[env].contract ,\n                      name: 'create',\n                      authorization: [{\n                                    actor: username,\n                                    permission: \"active\",/*wallet.auth.permission,*/\n                                  }],\n                      data: {user:username},\n                }],\n            }, {\n                    broadcast: true,\n                blocksBehind: 3, expireSeconds: 100});\n            dispatch({type:'switch', payload:'done'})\n        }\n        catch(err) {\n            alert(err)\n                /*\n             if (err instanceof RpcError){\n                 console.log(JSON.stringify(e.json, null, 2));\n             }\n             */\n\n            dispatch({type:'switch', payload:\"error\"})\n            console.log('error', err)\n        }\n    };\n    const renderWalletProviders = walletProviders.map(\n        ({meta}, idx) => (<button className=\"button\" onClick={() => { selectWalletProvider(idx )}} key={idx}>{meta.name}</button>)\n    )\n\tconst onClickApply = () => {\n\t\t// flip through all the different providers\n\t\tfor (var idx = 0; idx < walletProviders.length; ++idx) {\n\t\t\tif (walletProviders[idx].id == clientType) {\n\t\t\t\tselectWalletProvider(idx)\n\t\t\t\treturn \n\t\t\t}\n\t\t}\n\t\tdispatch({type:'switch', payload: 'login_selection'}) \n\t} \n\n    let renderLoginBox = null\n\tlet introText = null\n    if (status == 'intro') {\n\t\tif (clientType == \"mobile_browser\") {\n\t\t\tintroText = (\n\t\t\t\t<>\n\t\t\t\t\t<p style={{fontWeight:'bold'}}>Start by opening TokenPocket or EOS Lynx, and then open this app by navigating to http://trf.eosdetroit.io.</p>\n\t\t\t\t</>)\n\n\t\t} else if (clientType == \"desktop_browser\") {\n\t\t\tintroText = (\n\t\t\t\t<>\n\t\t\t\t\t<p style={{fontWeight:'bold'}}>Start by opening the <a href=\"scatter://open\">Scatter</a> or <a href=\"tokenpocket://open\">Token Pocket</a> and then open this app.</p>\n\t\t\t\t</>)\n\t\t}\n\t\telse {\n\t\t\tintroText = (\n\t\t\t\t<>\n\t\t\t\t\t<p>I see you're logged in with {clientType}. Great!</p>\n\t\t\t\t</>)\n\t\t}\n\t\t\n        renderLoginBox = (\n\t\t\t<>\n                <div>\n                    <div className=\"hideOnDesktop\" style={{textAlign:'center',paddingBottom:40}}>\n                        <img src=\"/img/rio_mobile.jpg\" />\n                    </div>\n\t\t\t\t\t<h1>What is the Travel Reimbursement Fund?</h1>\n\n\t\t\t\t\t<p>The Travel Reimbursement Fund is an initiative to make EOSIO community events inclusive, rolled out for the 2019 EOS Community Conference in Rio de Janeiro.</p>\n\n\t\t\t\t\t<p>By providing a pro-rata travel stipend to attendees, together we can subsidize the costs of travel for our EOSIO community.</p>\n\n\t\t\t\t\t<p>All attendees are welcome to opt-in! A warm thanks goes out to the generous donors who made this possible:</p>\n                    <div className=\"donors\" style={{}}>\n                        <a className=\"donors--a\" target=\"_blank\" href=\"https://eosrio.io\">EOS Rio</a>\n                        <a className=\"donors--a\" target=\"_blank\" href=\"https://eoslaomao.com\">EOS LaoMao</a>\n                        <a className=\"donors--a\" target=\"_blank\" href=\"\">EOS BP Legal Fund Donors</a>\n                        <a className=\"donors--a\" target=\"_blank\" href=\"https://eosdetroit.io\">EOS Detroit</a>\n                    </div>\n\t\t\t\t\t<h2>Applying</h2>\n\n\t\t\t\t\t<p>Just login with your EOS username, then bring your travel info (a flight email or home address) and show it to Robrigo at the event.</p>\n\n\t\t\t\t\t{introText}\n                </div>\n                <div style={{paddingTop:20}}>\n                    <button className=\"button\" onClick={onClickApply}>LOGIN WITH EOS</button>\n                </div>\n\t\t\t</>\n        )\n    } else if (status == 'login_selection'){\n        renderLoginBox = (\n            <>{renderWalletProviders}</>\n        )\n    } else if (status == 'done') {\n        renderLoginBox = (\n                <>\n                <div>\n                  <p>Success! Now find this Rob guy, and show him your travel info. </p>\n                  <p>(A flight email, or something that has your home town on it.)</p>\n                </div>\n                <div style={{textAlign:'center'}}>\n                <img src=\"/img/rob.jpg\" />\n                </div>\n                </>\n        )\n    } else if (status == 'already_signed_up') {\n        renderLoginBox = (\n                <>\n                <div>\n                  You're already signed up. Now you just need to find this Robrigo guy, and hand him your travel info.  \n                </div>\n                <div>\n                <img src=\"/img/rob.jpg\" />\n                </div>\n                </>\n        )\n    } else if (status == 'error') {\n        renderLoginBox = (\n                <>\n            <h1>Something Went Awry</h1>\n\t\t\t\t<p>Hmmm.. Make sure your EOS wallet app is open?</p>\n\t\t\t\n                    <button className=\"button\" onClick={() => { \n\t\t\t\t\t\tdispatch({type:'switch', payload: 'intro'})\n\t\t\t\t\t}}>Try Again</button>\n                </>\n        )\n\n    } else {\n        renderLoginBox = (\n                <>\n\t\t\t\t<Status />\n            </>\n        )\n    }\n\n    let isAdmin = false;\n    if(window.location.hash == \"#admin\") {\n        isAdmin = true;\n    }\n\treturn (\n    <div style={{display:'flex', flexDirection: 'column'}}> \n        <div className=\"nav-desktop\">\n            <div style={{flexGrow:1, padding: '13px 25px',   display:'flex', flexDirection: 'column', flexGrow: 1,  letterSpacing: '1px', fontSize:19, }} > TRAVEL REIMBURSMENT FUND</div>\n            <div style={{ maxHeight:200, borderBottomRightRadius:5, borderBottomLeftRadius: 5, padding: '13px 25px', backgroundColor:'#F3F5F9', letterSpacing: '1px', fontWeight:'bold', fontSize:19}} >\n                <a style={{textDecoration:'none'}} target=\"_blank\" href=\"http://eosdetroit.io\">EOS DETROIT</a>\n            </div>\n        </div>\n        <div className=\"nav-mobile\" style={{textAlign:'center'}}>\n            <div style={{fontSize:26, padding:20, backgroundColor:'#bfc3c9'}}>\n                EOS DETROIT\n            </div>\n            <div style={{padding:20, backgroundColor:'#f3f5f9'}}>\n                TRAVEL REIMBURSMENT FUND\n            </div>\n        </div>\n    \n        <div id=\"main-js\" className=\"main\">\n\t\t\t<div className=\"left\" style={{minHeight:'80vh', padding:'20px 20px 0'}}>\n\t\t\t\t\t{isAdmin ? <Admin /> : renderLoginBox}\n\t\t\t</div>\n\t\t\t<div className=\"right\"> \n\t\t\t\t<div><img src=\"/img/rio_sky.jpg\" /></div>\n\t\t\t</div>\n\t\t</div>\n            <div style={{marginTop:40, paddingTop:20, paddingLeft:10, paddingRight:10, paddingBottom:60, backgroundColor:'#f3f5f9',fontSize:14, display: 'flex', justifyContent: 'center'}}>\n                        <div style={{maxWidth:503, textAlign:'center'}} >\n                        <br />\n\n\n                        <link href=\"//cdn-images.mailchimp.com/embedcode/horizontal-slim-10_7.css\" rel=\"stylesheet\" type=\"text/css\"/>\n\n                        <div>Subscribe and be notified of furture EOS Community Conferences.</div>\n                        <div id=\"mc_embed_signup\">\n                        <form action=\"https://eosdetroit.us18.list-manage.com/subscribe/post?u=fc364bf57aca4a23d8d5bffb0&amp;id=3bdceba087\" method=\"post\" id=\"mc-embedded-subscribe-form\" name=\"mc-embedded-subscribe-form\" className=\"validate\" target=\"_blank\" novalidate>\n                            <div id=\"mc_embed_signup_scroll\">\n                                <input type=\"email\" name=\"EMAIL\" className=\"email\" id=\"mce-EMAIL\" placeholder=\"email address\" required />\n                            <div style={{position: 'absolute', left: '-5000px'}} aria-hidden=\"true\"><input type=\"text\" name=\"b_fc364bf57aca4a23d8d5bffb0_3bdceba087\" tabindex=\"-1\" value=\"\"/></div>\n                            <div className=\"clear mailchimp-subscribe-eos\"><input type=\"submit\" value=\"Subscribe\" name=\"subscribe\" id=\"mc-embedded-subscribe\" className=\"button\" /></div>\n                        </div>\n                        </form>\n                        </div>\n                    </div>\n                </div>\n\t\t<div style={{bottom:0, position:'fixed', right: 0, padding:20}}>\n\t\t\t<a href=\"http://eosdetroit.io\" target=\"_blank\">\n\t\t\t\t<img width={65} src=\"/img/eos_detroit_logo_transparent.png\" />\n\t\t\t</a>\n\t\t</div>\n\n    </div>\n\t)\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider} from \"react-redux\";\nimport {combineReducers, createStore} from 'redux'\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst statusReducer = (status = 'intro', action ) => {\n    switch(action.type) {\n        case \"switch\":\n            document.getElementById('main-js').scrollIntoView({behavior: 'smooth'});\n\n            return  action.payload;\n        default: \n            return status;\n    }\n}\n\nlet reducers = combineReducers(\n    {\n        \"status\": statusReducer,\n    }\n)\nlet store = createStore(reducers);\n        \nReactDOM.render(\n    (<Provider store={store}>\n        <App />\n    </Provider>), document.getElementById('root'));\n\n//serviceWorker.register();\n\n"],"sourceRoot":""}